services:
  postgres:
    image: postgres:17.5
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - equipqr_network

  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z-cpuv1
    container_name: minio
    command: server /data --address ":${MINIO_PORT:-9000}" --console-address ":${MINIO_WEBVIEW_PORT:-9001}"
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_WEBVIEW_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    networks:
      - equipqr_network

  # == NOT IN USE ==

  # backend:
  #   build:
  #     context: ./repos/backend/
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - postgres
  #     - minio
  #     - redis
  #   ports:
  #     - "${APP_PORT:-3000}:3000"
  #   networks:
  #     - equipqr_network

  # keydb:
  #   image: bitnami/keydb:6.3.4
  #   container_name: keydb
  #   restart: unless-stopped
  #   ports:
  #     - "${REDIS_PORT:-6379}:6379"
  #   command: keydb-server /etc/keydb/keydb.conf
  #   volumes:
  #     - ./keydb.conf:/etc/keydb/keydb.conf
  #   networks:
  #     - equipqr_network

volumes:
  postgres_data:
  minio_data:

networks:
  equipqr_network:
